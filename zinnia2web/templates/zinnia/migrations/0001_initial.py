# Generated by Django 2.1.5 on 2020-06-17 07:02

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import multiselectfield.db.fields
import tagging.fields
import zinnia.models_bases.entry


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(help_text="Used to build the category's URL.", max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='zinnia.Category', verbose_name='parent category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_uno', models.FileField(blank=True, null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_video, verbose_name='video_uno')),
                ('title', models.CharField(help_text='Real o fantasía, usado en sitio', max_length=255, verbose_name='Nombre')),
                ('rut', models.CharField(blank=True, help_text='Solo administración', max_length=13, null=True, verbose_name='Rut')),
                ('nombreadmin', models.CharField(blank=True, help_text='Solo administración', max_length=255, null=True, verbose_name='Nombre')),
                ('apellidouno', models.CharField(blank=True, help_text='Solo administración', max_length=255, null=True, verbose_name='Apellido Paterno')),
                ('apellidodos', models.CharField(blank=True, help_text='Solo administración', max_length=255, null=True, verbose_name='Apellido Materno')),
                ('concelular', models.CharField(blank=True, help_text='ej: 988776655', max_length=12, null=True, verbose_name='Teléfono Celular')),
                ('conemail', models.EmailField(blank=True, help_text='Solo administración', max_length=255, null=True, verbose_name='Email contacto')),
                ('convalor', models.CharField(help_text='ej: 100.000', max_length=10, verbose_name='Valor')),
                ('conrecordatorio', models.TextField(blank=True, help_text='Solo administración', null=True, verbose_name='Notas y Recordatorios')),
                ('certificadomedico', models.ImageField(blank=True, help_text='Subir archivo, solo administración', null=True, upload_to='', verbose_name='Certificado Médico')),
                ('examenaldia', models.CharField(blank=True, choices=[('aldia', 'Al día')], default='', help_text='Usado en sitio', max_length=20, null=True, verbose_name='Certificado Médico')),
                ('atiendeuno', models.CharField(blank=True, choices=[('departamentopropio', 'Depto propio')], default='', help_text='Departamento propio', max_length=20, null=True, verbose_name='Atiende en:')),
                ('atiendedos', models.CharField(blank=True, choices=[('hoteles', 'Hoteles')], default='', help_text='Hoteles', max_length=20, null=True, verbose_name='Atiende en:')),
                ('atiendetres', models.CharField(blank=True, choices=[('moteles', 'Moteles')], default='', help_text='Moteles', max_length=20, null=True, verbose_name='Atiende en:')),
                ('atiendecuatro', models.CharField(blank=True, choices=[('domicilios', 'Domicilios')], default='', help_text='Domicilios', max_length=20, null=True, verbose_name='Atiende en:')),
                ('dialunes', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Lunes')),
                ('diamartes', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Martes')),
                ('diamiercoles', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Miércoles')),
                ('diajueves', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Jueves')),
                ('diaviernes', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Viernes')),
                ('diasabado', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Sábado')),
                ('diadomingo', models.CharField(blank=True, choices=[('fulltime', 'Full Time')], default='fulltime', max_length=20, null=True, verbose_name='Domingo')),
                ('atencion_pareja', models.CharField(blank=True, choices=[('atencionpareja', 'Atención en Pareja')], default='', max_length=24, null=True, verbose_name='Atención en Pareja')),
                ('atencion_mujeres', models.CharField(blank=True, choices=[('atencionmujeres', 'Atención a Mujeres')], default='', max_length=24, null=True, verbose_name='Atención a Mujeres')),
                ('atencion_discapaci', models.CharField(blank=True, choices=[('atenciondiscapaci', 'Atención a Discapacitados')], default='', max_length=24, null=True, verbose_name='Atención a Discapacitados')),
                ('servicio_griego', models.CharField(blank=True, choices=[('griego', 'Griego')], default='', max_length=24, null=True, verbose_name='Griego')),
                ('frances_natural', models.CharField(blank=True, choices=[('francesnatural', 'Francés Natural')], default='', max_length=24, null=True, verbose_name='Francés Natural')),
                ('sexo_oral', models.CharField(blank=True, choices=[('sexooral', 'Sexo Oral')], default='', max_length=24, null=True, verbose_name='Francés Natural')),
                ('lesbico', models.CharField(blank=True, choices=[('lesbico', 'Lésbico')], default='', max_length=24, null=True, verbose_name='Lésbico')),
                ('garganta_profunda', models.CharField(blank=True, choices=[('gargantaproof', 'Garganta Profunda')], default='', max_length=24, null=True, verbose_name='Garganta Profunda')),
                ('duales_trios', models.CharField(blank=True, choices=[('dualestrios', 'Duales o Trios')], default='', max_length=24, null=True, verbose_name='Duales o Trios')),
                ('americanaa', models.CharField(blank=True, choices=[('americana', 'Americana')], default='', max_length=24, null=True, verbose_name='Americana')),
                ('americana_corporal', models.CharField(blank=True, choices=[('americanacorporal', 'Americana Corporal')], default='', max_length=24, null=True, verbose_name='Americana Corporal')),
                ('masajes', models.CharField(blank=True, choices=[('masajes', 'Masajes')], default='', max_length=24, null=True, verbose_name='Masajes')),
                ('baile_erotico', models.CharField(blank=True, choices=[('baileerotico', 'Baile Erótico')], default='', max_length=24, null=True, verbose_name='Baile Erótico')),
                ('besos_novia', models.CharField(blank=True, choices=[('besosdenovia', 'Besos de Novia')], default='', max_length=24, null=True, verbose_name='Besos de Novia')),
                ('juguetes_eroticos', models.CharField(blank=True, choices=[('jugueteserotic', 'Juguetes Eróticos')], default='', max_length=24, null=True, verbose_name='Juguetes Eróticos')),
                ('cuadro_plastico', models.CharField(blank=True, choices=[('cuadroplastico', 'Cuadro Plástico')], default='', max_length=24, null=True, verbose_name='Cuadro Plástico')),
                ('despedida_soltero', models.CharField(blank=True, choices=[('despedidasolteros', 'Despedida de Solteros')], default='', max_length=24, null=True, verbose_name='Despedida de Solteros')),
                ('viajess', models.CharField(blank=True, choices=[('viajess', 'Viajes')], default='', max_length=24, null=True, verbose_name='Viajes')),
                ('sadismo', models.CharField(blank=True, choices=[('sadismo', 'Sadismo')], default='', max_length=24, null=True, verbose_name='Sadismo')),
                ('servicio_adicional_uno', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #1')),
                ('servicio_adicional_dos', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #2')),
                ('servicio_adicional_tres', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #3')),
                ('servicio_adicional_cuatro', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #4')),
                ('servicio_adicional_cinco', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #5')),
                ('servicio_adicional_seis', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #6')),
                ('servicio_adicional_siete', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #7')),
                ('servicio_adicional_ocho', models.CharField(blank=True, max_length=20, null=True, verbose_name='Servicio Adicional #8')),
                ('mesesatra', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('mes_enero', 'Enero'), ('mes_febrero', 'Febrero'), ('mes_marzo', 'Marzo'), ('mes_abril', 'Abril'), ('mes_mayo', 'Mayo'), ('mes_junio', 'Junio'), ('mes_julio', 'Julio'), ('mes_agosto', 'Agosto'), ('mes_septiembre', 'Septiembre'), ('mes_octubre', 'Octubre'), ('mes_noviembre', 'Noviembre'), ('mes_diciembre', 'Diciembre')], help_text='Solo administración', max_length=136, null=True, verbose_name='Registro de meses')),
                ('edad', models.CharField(blank=True, choices=[('16', 16), ('17', 17), ('18', 18), ('19', 19), ('20', 20), ('21', 21), ('22', 22), ('23', 23), ('24', 24), ('25', 25), ('26', 26), ('27', 27), ('28', 28), ('29', 29), ('30', 30), ('31', 31), ('32', 32), ('33', 33), ('34', 34), ('35', 35), ('36', 36), ('37', 37), ('38', 38), ('39', 39), ('40', 40), ('41', 41), ('42', 42), ('43', 43), ('44', 44), ('45', 45), ('46', 46), ('47', 47), ('48', 48), ('49', 49), ('50', 50), ('51', 51), ('52', 52), ('53', 53), ('54', 54), ('55', 55), ('56', 56), ('57', 57), ('58', 58), ('59', 59), ('60', 60)], default=16, help_text='Rango de edad', max_length=2, null=True)),
                ('nacionalidad', models.CharField(help_text='Pais de orígen', max_length=20, verbose_name='Nacionalidad')),
                ('tez', models.CharField(blank=True, choices=[('blanca', 'Blanca'), ('trigueña', 'Trigueña'), ('morena', 'Morena')], default='blanca', help_text='Tipo de piel', max_length=20, null=True)),
                ('altura', models.CharField(blank=True, choices=[('120', 120), ('121', 121), ('122', 122), ('123', 123), ('124', 124), ('125', 125), ('126', 126), ('127', 127), ('128', 128), ('129', 129), ('130', 130), ('131', 131), ('132', 132), ('133', 133), ('134', 134), ('135', 135), ('136', 136), ('137', 137), ('138', 138), ('139', 139), ('140', 140), ('141', 141), ('142', 142), ('143', 143), ('144', 144), ('145', 145), ('146', 146), ('147', 147), ('148', 148), ('149', 149), ('150', 150), ('151', 151), ('152', 152), ('153', 153), ('154', 154), ('155', 155), ('156', 156), ('157', 157), ('158', 158), ('159', 159), ('160', 160), ('161', 161), ('162', 162), ('163', 163), ('164', 164), ('165', 165), ('166', 166), ('167', 167), ('168', 168), ('169', 169), ('170', 170), ('171', 171), ('172', 172), ('173', 173), ('174', 174), ('175', 175), ('176', 176), ('177', 177), ('178', 178), ('179', 179), ('180', 180), ('181', 181), ('182', 182), ('183', 183), ('184', 184), ('185', 185), ('186', 186), ('187', 187), ('188', 188), ('189', 189), ('190', 190), ('191', 191), ('192', 192), ('193', 193), ('194', 194), ('195', 195), ('196', 196), ('197', 197), ('198', 198), ('199', 199), ('200', 200)], default=120, help_text='Altura en centímetros', max_length=3, null=True)),
                ('peso', models.CharField(blank=True, choices=[('40', 40), ('41', 41), ('42', 42), ('43', 43), ('44', 44), ('45', 45), ('46', 46), ('47', 47), ('48', 48), ('49', 49), ('50', 50), ('51', 51), ('52', 52), ('53', 53), ('54', 54), ('55', 55), ('56', 56), ('57', 57), ('58', 58), ('59', 59), ('60', 60), ('61', 61), ('62', 62), ('63', 63), ('64', 64), ('65', 65), ('66', 66), ('67', 67), ('68', 68), ('69', 69), ('70', 70), ('71', 71), ('72', 72), ('73', 73), ('74', 74), ('75', 75), ('76', 76), ('77', 77), ('78', 78), ('79', 79), ('80', 80), ('81', 81), ('82', 82), ('83', 83), ('84', 84), ('85', 85), ('86', 86), ('87', 87), ('88', 88), ('89', 89), ('90', 90)], default=40, help_text='Peso en kilogramos', max_length=2, null=True)),
                ('busto', models.CharField(blank=True, choices=[('40', 40), ('41', 41), ('42', 42), ('43', 43), ('44', 44), ('45', 45), ('46', 46), ('47', 47), ('48', 48), ('49', 49), ('50', 50), ('51', 51), ('52', 52), ('53', 53), ('54', 54), ('55', 55), ('56', 56), ('57', 57), ('58', 58), ('59', 59), ('60', 60), ('61', 61), ('62', 62), ('63', 63), ('64', 64), ('65', 65), ('66', 66), ('67', 67), ('68', 68), ('69', 69), ('70', 70), ('71', 71), ('72', 72), ('73', 73), ('74', 74), ('75', 75), ('76', 76), ('77', 77), ('78', 78), ('79', 79), ('80', 80), ('81', 81), ('82', 82), ('83', 83), ('84', 84), ('85', 85), ('86', 86), ('87', 87), ('88', 88), ('89', 89), ('90', 90), ('91', 91), ('92', 92), ('93', 93), ('94', 94), ('95', 95), ('96', 96), ('97', 97), ('98', 98), ('99', 99), ('100', 100), ('101', 101), ('102', 102), ('103', 103), ('104', 104), ('105', 105), ('106', 106), ('107', 107), ('108', 108), ('109', 109), ('110', 110), ('111', 111), ('112', 112), ('113', 113), ('114', 114), ('115', 115), ('116', 116), ('117', 117), ('118', 118), ('119', 119), ('120', 120), ('121', 121), ('122', 122), ('123', 123), ('124', 124), ('125', 125), ('126', 126), ('127', 127), ('128', 128), ('129', 129), ('130', 130), ('131', 131), ('132', 132), ('133', 133), ('134', 134), ('135', 135), ('136', 136), ('137', 137), ('138', 138), ('139', 139), ('140', 140), ('141', 141), ('142', 142), ('143', 143), ('144', 144), ('145', 145), ('146', 146), ('147', 147), ('148', 148), ('149', 149), ('150', 150), ('151', 151), ('152', 152), ('153', 153), ('154', 154), ('155', 155), ('156', 156), ('157', 157), ('158', 158), ('159', 159), ('160', 160), ('161', 161), ('162', 162), ('163', 163), ('164', 164), ('165', 165), ('166', 166), ('167', 167), ('168', 168), ('169', 169), ('170', 170), ('171', 171), ('172', 172), ('173', 173), ('174', 174), ('175', 175), ('176', 176), ('177', 177), ('178', 178), ('179', 179), ('180', 180)], default=40, help_text='(X) Medida de busto en centímetros (X)', max_length=3, null=True)),
                ('cintura', models.CharField(blank=True, choices=[('40', 40), ('41', 41), ('42', 42), ('43', 43), ('44', 44), ('45', 45), ('46', 46), ('47', 47), ('48', 48), ('49', 49), ('50', 50), ('51', 51), ('52', 52), ('53', 53), ('54', 54), ('55', 55), ('56', 56), ('57', 57), ('58', 58), ('59', 59), ('60', 60), ('61', 61), ('62', 62), ('63', 63), ('64', 64), ('65', 65), ('66', 66), ('67', 67), ('68', 68), ('69', 69), ('70', 70), ('71', 71), ('72', 72), ('73', 73), ('74', 74), ('75', 75), ('76', 76), ('77', 77), ('78', 78), ('79', 79), ('80', 80), ('81', 81), ('82', 82), ('83', 83), ('84', 84), ('85', 85), ('86', 86), ('87', 87), ('88', 88), ('89', 89), ('90', 90), ('91', 91), ('92', 92), ('93', 93), ('94', 94), ('95', 95), ('96', 96), ('97', 97), ('98', 98), ('99', 99), ('100', 100), ('101', 101), ('102', 102), ('103', 103), ('104', 104), ('105', 105), ('106', 106), ('107', 107), ('108', 108), ('109', 109), ('110', 110), ('111', 111), ('112', 112), ('113', 113), ('114', 114), ('115', 115), ('116', 116), ('117', 117), ('118', 118), ('119', 119), ('120', 120), ('121', 121), ('122', 122), ('123', 123), ('124', 124), ('125', 125), ('126', 126), ('127', 127), ('128', 128), ('129', 129), ('130', 130), ('131', 131), ('132', 132), ('133', 133), ('134', 134), ('135', 135), ('136', 136), ('137', 137), ('138', 138), ('139', 139), ('140', 140), ('141', 141), ('142', 142), ('143', 143), ('144', 144), ('145', 145), ('146', 146), ('147', 147), ('148', 148), ('149', 149), ('150', 150), ('151', 151), ('152', 152), ('153', 153), ('154', 154), ('155', 155), ('156', 156), ('157', 157), ('158', 158), ('159', 159), ('160', 160), ('161', 161), ('162', 162), ('163', 163), ('164', 164), ('165', 165), ('166', 166), ('167', 167), ('168', 168), ('169', 169), ('170', 170), ('171', 171), ('172', 172), ('173', 173), ('174', 174), ('175', 175), ('176', 176), ('177', 177), ('178', 178), ('179', 179), ('180', 180)], default=40, help_text='(Z) Medida de cintura en centímetros (Z)', max_length=3, null=True)),
                ('cadera', models.CharField(blank=True, choices=[('40', 40), ('41', 41), ('42', 42), ('43', 43), ('44', 44), ('45', 45), ('46', 46), ('47', 47), ('48', 48), ('49', 49), ('50', 50), ('51', 51), ('52', 52), ('53', 53), ('54', 54), ('55', 55), ('56', 56), ('57', 57), ('58', 58), ('59', 59), ('60', 60), ('61', 61), ('62', 62), ('63', 63), ('64', 64), ('65', 65), ('66', 66), ('67', 67), ('68', 68), ('69', 69), ('70', 70), ('71', 71), ('72', 72), ('73', 73), ('74', 74), ('75', 75), ('76', 76), ('77', 77), ('78', 78), ('79', 79), ('80', 80), ('81', 81), ('82', 82), ('83', 83), ('84', 84), ('85', 85), ('86', 86), ('87', 87), ('88', 88), ('89', 89), ('90', 90), ('91', 91), ('92', 92), ('93', 93), ('94', 94), ('95', 95), ('96', 96), ('97', 97), ('98', 98), ('99', 99), ('100', 100), ('101', 101), ('102', 102), ('103', 103), ('104', 104), ('105', 105), ('106', 106), ('107', 107), ('108', 108), ('109', 109), ('110', 110), ('111', 111), ('112', 112), ('113', 113), ('114', 114), ('115', 115), ('116', 116), ('117', 117), ('118', 118), ('119', 119), ('120', 120), ('121', 121), ('122', 122), ('123', 123), ('124', 124), ('125', 125), ('126', 126), ('127', 127), ('128', 128), ('129', 129), ('130', 130), ('131', 131), ('132', 132), ('133', 133), ('134', 134), ('135', 135), ('136', 136), ('137', 137), ('138', 138), ('139', 139), ('140', 140), ('141', 141), ('142', 142), ('143', 143), ('144', 144), ('145', 145), ('146', 146), ('147', 147), ('148', 148), ('149', 149), ('150', 150), ('151', 151), ('152', 152), ('153', 153), ('154', 154), ('155', 155), ('156', 156), ('157', 157), ('158', 158), ('159', 159), ('160', 160), ('161', 161), ('162', 162), ('163', 163), ('164', 164), ('165', 165), ('166', 166), ('167', 167), ('168', 168), ('169', 169), ('170', 170), ('171', 171), ('172', 172), ('173', 173), ('174', 174), ('175', 175), ('176', 176), ('177', 177), ('178', 178), ('179', 179), ('180', 180)], default=40, help_text='(Y) Medida de cadera en centímetros (Y)', max_length=3, null=True)),
                ('contextura', models.CharField(blank=True, choices=[('flaca', 'Flaca'), ('delgada', 'Delgada'), ('atletica', 'Atlética'), ('promedio', 'Promedio'), ('gruesa', 'Gruesa'), ('vuluptuosa', 'Vuluptuosa'), ('gorda', 'Gorda')], default='flaca', help_text='Tipo de cuerpo', max_length=20, null=True)),
                ('cabello', models.CharField(blank=True, choices=[('negro', 'Negro'), ('castano', 'Castaño'), ('chocolate', 'Chocolate'), ('rubio', 'Rubio'), ('cobrizo', 'Cobrizo')], default='negro', help_text='Color de cabello', max_length=20, null=True)),
                ('ojos', models.CharField(blank=True, choices=[('marrones', 'Marrones'), ('avellana', 'Avellana'), ('miel', 'Miel'), ('verdes', 'Verdes'), ('azulmar', 'Azul Mar'), ('azules', 'Azules')], default='marrones', help_text='Color de ojos', max_length=20, null=True)),
                ('busto2', models.CharField(blank=True, choices=[('pequeño', 'Pequeño'), ('mediano', 'Mediano'), ('grande', 'Grande'), ('muygrande', 'Muy grande')], default='pequeño', help_text='Tipo de busto', max_length=20, null=True, verbose_name='Tipo de busto')),
                ('cola', models.CharField(blank=True, choices=[('pequeña', 'Pequeña'), ('mediana', 'Mediana'), ('grande', 'Grande'), ('muygrande', 'Muy grande')], default='pequeña', help_text='Tipo de cola', max_length=20, null=True, verbose_name='Tipo de cola')),
                ('depilacion', models.CharField(blank=True, choices=[('sindepilar', 'Sin Depilar'), ('comun', 'Común'), ('cavadofrances', 'Cavado francés'), ('cavadotanga', 'Cavado de tanga'), ('cajatiffany', 'Caja tiffany'), ('brasileñototal', 'Brasileño total'), ('completa', 'Depilada Completa')], default='sindepilar', help_text='Tipo de depilación', max_length=20, null=True, verbose_name='Depilación')),
                ('ciudadheader', models.CharField(blank=True, choices=[('curico', 'Curicó'), ('talca', 'Talca'), ('concepción', 'Concepción'), ('chillan', 'Chillán'), ('losangeles', 'Los Angeles'), ('temuco', 'Temuco'), ('pucon', 'Pucón'), ('villarica', 'Villarrica'), ('futrono', 'Futrono'), ('valdivia', 'Valdivia'), ('riobueno', 'Rio Bueno'), ('launion', 'La Unión'), ('osorno', 'Osorno'), ('puertomontt', 'Puerto Montt'), ('puntaaernas', 'Punta Arenas')], default='', help_text='Seleccione la ciudad para el encabezado de perfil ', max_length=20, null=True, verbose_name='Encabezado')),
                ('idiomauno', models.CharField(blank=True, choices=[('espanol', 'Español'), ('ingles', 'Inglés'), ('portugues', 'Portugués '), ('ruso', 'Ruso'), ('aleman', 'Alemán'), ('frances', 'Frances')], default='espanol', help_text='Idioma Principal', max_length=20, null=True, verbose_name='Idioma Principal')),
                ('idiomados', models.CharField(blank=True, choices=[('espanol', 'Español'), ('ingles', 'Inglés'), ('portugues', 'Portugués '), ('ruso', 'Ruso'), ('aleman', 'Alemán'), ('frances', 'Francés')], default='', help_text='Idioma Secundario', max_length=20, null=True, verbose_name='Idioma Secundario')),
                ('modeloretoque', models.CharField(blank=True, help_text='ej: ha sido entrevistada personalmente, sus fotografías están levemente retocadas', max_length=255, null=True, verbose_name='Comentario Retoque')),
                ('image', models.ImageField(help_text='Usada para portada', upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_box, verbose_name='Imagen de caja')),
                ('image2', models.ImageField(help_text='Usada para perfil', upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_perfil, verbose_name='Imagen de Perfil')),
                ('imagal1', models.ImageField(blank=True, help_text='Imagen 1', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (1)')),
                ('imagal2', models.ImageField(blank=True, help_text='Imagen 2', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (2)')),
                ('imagal3', models.ImageField(blank=True, help_text='Imagen 3', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (3)')),
                ('imagal4', models.ImageField(blank=True, help_text='Imagen 4', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (4)')),
                ('imagal5', models.ImageField(blank=True, help_text='Imagen 5', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (5)')),
                ('imagal6', models.ImageField(blank=True, help_text='Imagen 6', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (6)')),
                ('imagal7', models.ImageField(blank=True, help_text='Imagen 7', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (7)')),
                ('imagal8', models.ImageField(blank=True, help_text='Imagen 8', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (8)')),
                ('imagal9', models.ImageField(blank=True, help_text='Imagen 9', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (9)')),
                ('imagal10', models.ImageField(blank=True, help_text='Imagen 10', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (10)')),
                ('imagal11', models.ImageField(blank=True, help_text='Imagen 11', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (11)')),
                ('imagal12', models.ImageField(blank=True, help_text='Imagen 12', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (12)')),
                ('imagal13', models.ImageField(blank=True, help_text='Imagen 13', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (13)')),
                ('imagal14', models.ImageField(blank=True, help_text='Imagen 14', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (14)')),
                ('imagal15', models.ImageField(blank=True, help_text='Imagen 15', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (15)')),
                ('imagal16', models.ImageField(blank=True, help_text='Imagen 16', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (16)')),
                ('imagal17', models.ImageField(blank=True, help_text='Imagen 17', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (17)')),
                ('imagal18', models.ImageField(blank=True, help_text='Imagen 18', null=True, upload_to=zinnia.models_bases.entry.CoreEntry.get_imagen_galeria, verbose_name='Imagen de Galeria (18)')),
                ('categoriass', models.CharField(blank=True, choices=[('vip', 'Vip'), ('premium', 'Premium'), ('gold', 'Gold '), ('silver', 'Silver')], default='', help_text='Categoria', max_length=20, null=True, verbose_name='Categoría')),
                ('slug', models.SlugField(help_text="Used to build the entry's URL.", max_length=255, unique=True, unique_for_date='publication_date', verbose_name='slug')),
                ('status', models.IntegerField(choices=[(0, 'draft'), (1, 'hidden'), (2, 'published')], db_index=True, default=0, help_text='Borrador: en edición / Oculto: almacenado / Publicado: en sitio', verbose_name='status')),
                ('publication_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text="Used to build the entry's URL.", verbose_name='publication date')),
                ('start_publication', models.DateTimeField(blank=True, db_index=True, help_text='Start date of publication.', null=True, verbose_name='start publication')),
                ('end_publication', models.DateTimeField(blank=True, db_index=True, help_text='End date of publication.', null=True, verbose_name='end publication')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date')),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last update')),
                ('content', models.TextField(blank=True, verbose_name='Descripción')),
                ('comment_enabled', models.BooleanField(default=True, help_text='Allows comments if checked.', verbose_name='comments enabled')),
                ('pingback_enabled', models.BooleanField(default=True, help_text='Allows pingbacks if checked.', verbose_name='pingbacks enabled')),
                ('trackback_enabled', models.BooleanField(default=True, help_text='Allows trackbacks if checked.', verbose_name='trackbacks enabled')),
                ('comment_count', models.IntegerField(default=0, verbose_name='comment count')),
                ('pingback_count', models.IntegerField(default=0, verbose_name='pingback count')),
                ('trackback_count', models.IntegerField(default=0, verbose_name='trackback count')),
                ('lead', models.TextField(blank=True, help_text='Lead paragraph', verbose_name='lead')),
                ('excerpt', models.TextField(blank=True, help_text='Used for SEO purposes.', verbose_name='excerpt')),
                ('featured', models.BooleanField(default=False, verbose_name='featured')),
                ('tags', tagging.fields.TagField(blank=True, max_length=255, verbose_name='tags')),
                ('login_required', models.BooleanField(default=False, help_text='Only authenticated users can view the entry.', verbose_name='login required')),
                ('password', models.CharField(blank=True, help_text='Protects the entry with a password.', max_length=50, verbose_name='password')),
                ('content_template', models.CharField(choices=[('zinnia/_entry_detail.html', 'Default template')], default='zinnia/_entry_detail.html', help_text="Template used to display the entry's content.", max_length=250, verbose_name='content template')),
                ('detail_template', models.CharField(choices=[('entry_detail.html', 'Default template')], default='entry_detail.html', help_text="Template used to display the entry's detail page.", max_length=250, verbose_name='detail template')),
            ],
            options={
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
                'ordering': ['-publication_date'],
                'permissions': (('can_view_all', 'Can view all entries'), ('can_change_status', 'Can change status'), ('can_change_author', 'Can change author(s)')),
                'get_latest_by': 'publication_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('auth.user', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='entry',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='entries', to='zinnia.Author', verbose_name='authors'),
        ),
        migrations.AddField(
            model_name='entry',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='entries', to='zinnia.Category', verbose_name='ciudad'),
        ),
        migrations.AddField(
            model_name='entry',
            name='related',
            field=models.ManyToManyField(blank=True, related_name='_entry_related_+', to='zinnia.Entry', verbose_name='related entries'),
        ),
        migrations.AddField(
            model_name='entry',
            name='sites',
            field=models.ManyToManyField(help_text='Sites where the entry will be published.', related_name='entries', to='sites.Site', verbose_name='sites'),
        ),
        migrations.AlterIndexTogether(
            name='entry',
            index_together={('status', 'publication_date', 'start_publication', 'end_publication'), ('slug', 'publication_date')},
        ),
    ]
